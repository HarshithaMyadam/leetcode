/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> result;
        vector<int> level;
        queue<TreeNode *> q;
        q.push(root);
        if(root==NULL)
            return result;
        int c=1;
        int n=0;
        while(!q.empty())
        {
            TreeNode *t=q.front();
            q.pop();
            level.push_back(t->val);
            c--;
            if(t->left!=NULL)
            {
                q.push(t->left);
                n++;
            }
            if(t->right!=NULL)
            {
                q.push(t->right);
                n++;
            }
            if(c==0)
            {
                result.push_back(level);
                level.clear();
                c=n;
                n=0;
            }
            
                
        }
        return result;
    }
};
